# frozen_string_literal: true
require_relative 'wordle/word_list'
class Wordle
  def initialize(word)
    @word =word.upcase
    @attempts = 6
    "_"*word.length
  end
  def try(attempt)
    alrwas=""
    if attempt.length != @word.length
      return "–ù–µ–≤–µ—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    end
    s=attempt.upcase
    result=""
    if s==@word
      return "–û—Ç–≤–µ—Ç –Ω–∞–π–¥–µ–Ω, –í—ã –ø–æ–±–µ–¥–∏–ª–∏!"
    end
    @attempts-=1
    @word.chars.each_with_index do |c, i|
      if c == s[i] && alrwas.count(s[i].upcase)<@word.count(s[i].upcase)
        result+="üü©"
        alrwas+=s[i].upcase
      elsif @word.include?(s[i]) && alrwas.count(s[i].upcase)<@word.count(s[i].upcase)
        result+="üü®"
        alrwas+=s[i].upcase
      else
        result+="‚¨õ"
      end
    end
    if result=="üü©"*@word.length
      return "–û—Ç–≤–µ—Ç –Ω–∞–π–¥–µ–Ω, —Ç—ã –ø–æ–±–µ–¥–∏–ª!"
    elsif @attempts<=0
      return "–ü–æ–ø—ã—Ç–æ–∫ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –û—Ç–≤–µ—Ç–æ–º –±—ã–ª–æ —Å–ª–æ–≤–æ: '#{@word}'. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"
    end
    return "–ü–æ–ø—ã—Ç–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å: #{@attempts} | –†–µ–∑—É–ª—å—Ç–∞—Ç: #{result}"
  end
end